{% set version = "0.8.7" %}
{% set posix = 'm2-' if win else '' %}

package:
  name: r-googlepolylines
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/googlePolylines_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/googlePolylines/googlePolylines_{{ version }}.tar.gz
  sha256: 4569bc0dfdb88c06fc1d822bbf98beaf3ee555b1e79a81c545ffb265fb9fad8b

build:
  number: 0
  # Checking windows to see if it passes. Uncomment the line if it fails.
  # skip: true  # [win]
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - cross-r-base {{ r_base }}  # [build_platform != target_platform]
    - r-rcpp                     # [build_platform != target_platform]
    - r-bh                       # [build_platform != target_platform]
    - {{ compiler('c') }}              # [not win]
    - {{ stdlib("c") }}                # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ stdlib("m2w64_c") }}          # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
  host:
    - r-base
    - r-bh
    - r-rcpp >=1.0.10
  run:
    - r-base
    #- r-bh
    - r-rcpp >=1.0.10

test:
  commands:
    - $R -e "library('googlePolylines')"           # [not win]
    - "\"%R%\" -e \"library('googlePolylines')\""  # [win]

about:
  home: https://CRAN.R-project.org/package=googlePolylines
  license: MIT
  summary: Encodes simple feature ('sf') objects and coordinates, and decodes polylines using the 'Google' polyline encoding algorithm (<https://developers.google.com/maps/documentation/utilities/polylinealgorithm>).
  license_family: MIT
  license_file:
    - {{ environ["PREFIX"] }}/lib/R/share/licenses/MIT
    - LICENSE

extra:
  recipe-maintainers:
    - conda-forge/r

# Package: googlePolylines
# Type: Package
# Title: Encoding Coordinates into 'Google' Polylines
# Version: 0.8.2
# Date: 2020-12-15
# Authors@R: c( person("David", "Cooley", ,"dcooley@symbolix.com.au", role = c("aut", "cre")), person("Paulo", "Barcelos", role = "ctb", comment = "Author of c++ decode_polyline"), person("Chris", "Muir", role = "ctb") )
# Description: Encodes simple feature ('sf') objects and coordinates, and decodes polylines using the 'Google' polyline encoding algorithm (<https://developers.google.com/maps/documentation/utilities/polylinealgorithm>).
# License: MIT + file LICENSE
# Encoding: UTF-8
# SystemRequirements: C++14
# Imports: Rcpp (>= 0.12.13)
# LinkingTo: Rcpp, BH
# RoxygenNote: 7.1.1
# Suggests: covr, knitr, rmarkdown, sf, sfheaders, testthat
# VignetteBuilder: knitr
# NeedsCompilation: yes
# Packaged: 2020-12-15 03:29:32 UTC; david
# Author: David Cooley [aut, cre], Paulo Barcelos [ctb] (Author of c++ decode_polyline), Chris Muir [ctb]
# Maintainer: David Cooley <dcooley@symbolix.com.au>
# Repository: CRAN
# Date/Publication: 2020-12-15 07:10:02 UTC
